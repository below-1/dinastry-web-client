{"version":3,"sources":["../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/is-observable/index.js","../node_modules/threads/dist/worker/implementation.browser.js","../node_modules/threads/dist/worker/index.js","../node_modules/threads/worker.js","../src/services/in_bound.js","../src/services/predict.js","../src/services/row_converter.js","../src/services/testing.js","../src/services/testing_thread.js"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","symbolObservable","require","default","exports","value","Boolean","in_bound","range","lower_bound_ok","upper_bound_ok","lower_bound","undefined","min","upper_bound","max","transform_attr","attr","cls_count","total","smooth","Object","keys","reduce","acc","k","create_predictor","summary","classes","modified_summary","cls","cls_summary","count","attributes","_attrs","forEach","attr_key","prob","input","map","c","attr_keys","attr_product","curr","parseInt","create_row_converter","criteria","row","kind","r","ranges","find","key","Error","build_sub_attribute","crit","subs","options","build_result_structure","data","criterias","d","_class","x","err","console","log","o","testing","ratios","n_run","row_converter","test_ratio","irun","all","n_test","Math","floor","length","test_data","train_data","summ","predictor","tp","fp","tn","fn","prec","recall","f1","run"],"mappings":"AEAA,ACAA,AEAA;AFCA,ACDA,ACCA;AHAA,ACCA,ACDA,AMDA,MRCMU,gBAAgB,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BC,OAAtD;ACEA,ACDA;AFCAJ,ACCA,ACDA,AMFA,MREM,CAACK,OAAP,GAAiBC,KAAK,IAAIC,OAAO,CAACD,KAAK,IAAIA,KAAK,CAACJ,gBAAD,CAAd,IAAoCI,KAAK,KAAKA,KAAK,CAACJ,gBAAD,CAAL,EAA/C,CAAjC;ACEA,ACDA;ADEA,ACDA;AJLe,AGOf,ACDA,AENe,ACAf,ACAA,SRAwBV,AMAAgB,QAAT,CAAmBC,KAAnB,EAA0BH,KAA1B,EAAiC,CNAjC,CAAkCb,IAAlC,EAAwC;ACCvD,ADAC,AGOD,ACDA,AENE,AGDF,ACGA,MVFKC,MAAJ,QUEM;AVDN,AGOD,ACDA,AENE,ACDF,AGGCiG,EAAAA,GAAG,CVFChG,AMACe,CIEA2D,KVFK,GAAG5E,IAAI,CAACE,AMAC,GAAG,GNAtB,EMAC;AHQF,ACDA,AENE,AGFF,ACEO,CAAP,KJAMgB,cAAc,GAAG,KAArB;ANCD,AGOD,ACDA,AIRe,MREV,GQFmBmC,IREZnD,MAAP,KAAkB,KQFR,CAA+BoD,IRE7C,EAAkC,EQFpB,EAAyC;APFxD,ADKE,AGOF,ACDA,AENE,AEFA,ACDF,MHGMtC,ENAAd,CQFG,EFEE,CAACiB,ENAA,CAAChB,IQFMoD,GAAV,CFEH,CEFkB,CREtB,EAAuB,CMAGnC,SAAtB,IAAmCJ,KAAK,CAACK,GAAN,KAAcD,SAArD,EAAgE;ALFlE,ADGGnB,AGOH,ACDA,AENI,AEFA,IPDAD,EDGDC,ECHH,AKGQe,AEFAf,IREC,CMAI,CAACkB,AEFA,CREFjB,EQFK,EAAb,EREc,CAACC,GMAX,IAAqB,GNA1B,AMAC,EAA8B;ANC/B,AGOH,ACDA,AENM,AEFFmD,IAAAA,CRAF,KMEQtC,CNAD,CQFG,CAAC2B,EFEE,CAACtB,GAAN,CEFN,CAAiB,CFECR,KAAhB,EAAuB,EEFRmC,CAAC,EAAI;APA1B,ADGG/C,AGOH,ACDA,AENQgB,AEFF,IPDF,EDGDhB,EMAKgB,EEFE+B,CPDC5C,AOCA,CREF,AQFGoD,GPDR,ADGQtD,CQFF,IPDU,AOCA,CREF,CAAC,AMAG,GAAG,IAAjB,AEFF,EPDN,AOC+B,EPDE,CDGf,CAAf;ACFDF,ADGCE,AGOH,ACDA,AENO,AEFC,ACHD,ERELF,IAAI,ADGHE,GCHME,AQFOW,GTKP,AQFK0C,CPDZ,ADGQtD,AQFK,GAAG6C,CAAC,ACHZ,CDGaU,ACHM1C,KTKvB,ASLI,CDGW,CAAS2C,ACHM9C,CTKVZ,GQFL,CAAc,ACHzB,ETKJ,ASLqC,QDGRwD,CAAC;APAhC,ADGE,AGOH,ACDA,AENK,AEH4B,ACF/B,CRAF,IKCI,ELCG,IAAI,AKGA,MEH0B,CPAnBpD,MAAP,KAAkB,WAAtB,AOAuCoD,CAAT,CPAK,COAOF,GAAG,CAACP,CAAC,CAACY,GAAH,CAAf,CAAJ;APC/B5D,ADGA,AGOF,ACDA,AENM,AEJ2B,ACD/B,EREAA,CDJD,GCIK,AQFAiB,GREGZ,ADGD,AQJU,CFIRW,AEJF,KPCN,AKGa,CAACK,GAAN,CGLU,GHKGR,AGLA,KHKjB,AGLJ,EHK4B;ALF7B,ADGCZ,AGOF,ACDA,AENQgB,ACTR,AEIE,CRAK,GDKLhB,ESLIiB,CREC,CKGCD,CCTCO,CPSD,CCHG,EDGA,KCHOlB,EQFE,EHKE,CCTtB,AEIuB,CREZ,CKGc,ENAvB,CSLA,CRE2B,AKGrB,CCTqD,UNMtD,EAAmC;AACxCN,ADGA,AGOF,ACDA,AENO,ACVsD,ACKrD,EPENA,IAAI,AMPqByB,GNOlBnB,CMPoD,ECKjD,CAACmD,CAAL,CPEN,COFc,EDLWhC,IAAkC;ANQ5D,AEUD,ACDA,AENK,ACXwD,ACMnD,ACAR,CRAK,KMN0BC,AEM3BV,CREC,IAAI,AQFA,CAACG,GFNiD,CCM7C,EPEEZ,EOFEsD,GDNanC,AEM3B,CREK,COFK,GCAYN,CREC,GMRgC,KEMvD,GREC,CQFkCJ,CREC,IQFI,CAACK,GAAN,KAAcD,ODAA4B,CAAC,CAACY,ACAvD,EAAgE,CDAlD,cAAgDL,GAAG,CAACP,CAAC,CAACY,GAAH,CAAnD,OAAN;APGR5D,ADGD,AGOD,ACDA,AENG,ACZ0D,ACOpD,ACAL,EREFA,CKPA,GLOI,AMTsC2B,EEOpCX,CRECT,ADGDN,AMAC,ECZoD,EEOhD,CAACkB,CREZ,ADGD,IOZ2CQ,KAAiB,CEOrD,IAAqB,GAAzB,EAA8B;ARGjC,ADGA,AGOD,ACDA,AENIV,ACbyD,AEQvD,CRAC,GKKHA,ECb+CW,CNU5C,GQFGZ,EFRmD,GEQ9C,CAACK,EHKE,CGLR,CFRyCO,CDa9B,CGLCf,GHKlB,CCbyD,CEQvD,EAAuB;ARG3Bb,AEUF,ACDA,AENG,ACbD,ACOMC,ACCAgB,ERENjB,IAAI,EOHEC,ACCAgB,CRECT,AMVAqB,KCOK,CDPC,ACOAmB,CDPClB,ACOA,CPGC,AOHA8B,CPGC,EMVT,ACOK,CDPOnC,ACOb,CCCc,EDDEgC,CDPf,ACOgB,ACCA,CDDC5C,CDPCkB,EEQnB,ERES,AOHT,CPGC,CMVA,CNUP,AMVgC,UAACC,GAAD,EAAMC,CAAN,EAAY;ANW7C,ADCA,AGSD,ACDA,AGnBID,ACOG,ACCA,IFRHA,GAAG,ACCD,CDDEC,CAAD,CAAH,GAAS,ACOA,CDPCR,GCOGuB,CDPC,ACOA,CDPCf,ACOAuB,CDPD,CAAJ,ECOG,CDPO,GAAV,ACOa,GDPG,CAAjB,KAAuB9B,GCOvB,EAA4B,IDPI,GAAIE,MAAM,GAAGD,KAA7C,CAAT;AJqBJ,ACDA,AENE,ACbE,ACOI1B,ACCH,KAJD,CHSEe,EENEf,GFMG,ACbA+B,AEQA,CHKCV,ECbR,ACOU,CAAC0B,CAAC,CAACY,GAAH,CAAN,EFMF,CENkBL,GAAG,CFMCnC,AENA4B,CAAC,CAACY,GAAH,CAAnB,GFMF,IAAmC5C,KAAK,CAACO,GAAN,KAAcH,SAArD,EAAgE;ALFlE,AGSA,AENI,ACbD,ACOI,ACCD,GFXG,CNaLnB,CMVC,EAHI,ACQI,CFQLe,AChBN,ENaQ,AQFAA,GREG,AKGA,AENA,CFMCM,CGLC,CAACD,GAAN,IAAaR,EHKf,GGLF,CHKuB,CGLC,EHK1B,EAA8B,ELHZb,IAAT,CAAb;AGUA,AENM,ACbL,ACOO,ACCAiB,QAAAA,EHKEJ,IENI,CPGCZ,AKGA,GAAGe,AENA6C,ICCI,CHKC,AENT,CFMUtC,CGLC,EHKnB,EAAuB,AGLrB,4BDD0CyB,CAAC,CAACQ,IAAtC,EAAN;AJaR,AENQtC,AEND,ACCA,QHKCA,cAAc,GAAG,IAAjB;AFOR,AENO,ACbA,ACOF,ACCA,KDbD,IDKYgB,gBAAT,QAAuD;AHoB9D,AENK,ACdyD,ACQ1D,ACCD,GAVD,EHWE,CCVgCC,GES3B,EHKE,AENAlC,EDRmD,ICQ1D,KDRgCkC,OAA0B;AHqB9D,AENM,ACfwD,ACS3D,ACCClB,GDjBF,CCiBEA,EFVyCU,IDenCd,CCfoD,IDe/C,GGLG,CHKCG,CCf0BW,CEUxB,GHKG,CAACJ,ACfqC,AEU1D,GHKE,EAAwB;AFO9B,AENQL,AChBsD,ACU7D,ACCE,MFXiDU,EDgB5CV,IChBsD,SAAVU,CDgB9B,GAAG,EChBqC,EDgBtD;AFOR,AENO,AChBL,MAAMQ,OAAO,GAAGP,MAAM,CAACC,IAAP,CAAYK,OAAZ,CAAhB;AHuBF,AENK,AChBH,AEWA,MFXME,AEWFrB,KAAK,CAACM,UFXY,CEWlB,EFXqBc,GEWChB,IFXM,CAACW,IEW7B,EFXqB,CAAe,CEWDf,KAAK,CAACO,GFXJS,AEWF,GFXC,EAAMM,AEWOlB,GFXb,EAAc,IEWtD,EAAgE;ALYlE,AENG,AChBC,AEWA,GHLF,KCNMmB,AEWAvB,CHKC,IGLI,CAACM,KFXK,GAAGa,GEWd,IFXqB,AEWA,CFXCG,EEW1B,CFXyB,CAAzB,AEW8B;ALYlC,AENIpB,AClBoD,AEalD,IHKFA,IChBMsB,EEWA3B,GFb8C,EEazC,CFXiB0B,EDgBd,AGLAvB,GHKG,EGLE,CAACO,CHKpB,EClBoD,AEalD,CFXIiB,CEWmB,IFb2B;AHyBxD,AENG,ACnBqD,AEchDtB,QFZSuB,AEYTvB,UFdgD,GAExBqB,CEYV,GAAG,IAAjB,GFdgD,CAEvCE,UAFuC;AH0BxD,AGvBI,AEYG,QFZCC,MAAM,GAAG,EAAb;AHwBJ,AENE,ACjBEb,AEYC,IFZDA,CEQA,IHSKZ,CCjBC,CAACa,AEYA,IFZP,CAAYW,ODiBO,GCjBnB,CDiBuBvB,CCjBCyB,OAAxB,CAAgC,KDiBlC,KCjBkCC,QAAQ,EAAI;AHwBhD,AENC,ACjBK,AEYA,UFZMnB,AEYFZ,IFZM,CEYD,EFZI4B,EEYAzB,KAAK,CAACO,EFZI,CAACqB,AEYxB,EAAwB,MFZD,CAAvB;AHwBN,AGvBMF,AEYExB,MFZFwB,EEYExB,IFZI,CAAC0B,QAAD,CAAN,AEYgB,GFZGpB,AEYA,IAAjB,UFZ+B,CAAC;AHwBxC,AGvBQC,AEYD,QFZCA,IAAI,EAAJA,IADgC;AHyBxC,AGvBQC,AEYH,QFZGA,SAAS,EAAEc,KAFqB;AH0BxC,AGvBQb,AEYL,GAVD,KFFMA,CEYC,IFZI,EAALA,KAHgC;AH2BxC,AGvBQC,AEYJV,IAAAA,IFZIU,MAAM,EAANA,EEYU,GAAG,IAAjB;ALYJ,AG5BwC,AEiBrC,OFjBoC,CAAjC;AH6BN,AGvBK,KARD,EAJoD,CAapD;AHuBJ,AGtBI,AEWF,SAAOX,cAAc,IAAIC,cAAzB;ALYF,AKXC;ALYD,AGvBI,2CACKc,GADL,2BAEGM,GAFH,EAES;AHsBb,AGrBQO,AEUR,MFVQA,GEUCiB,CFVG,EAAEtB,KAAK,GAAG,GAAR,GAAcb,EEU5B,CAA8BoC,EFXjB,EEWb,EAAoC;ALYpC,AGrBQtB,AEUN,MFVMA,AEUAuB,IAAI,GAAGD,GFVG,CEUC,CFVCrB,AEUAc,IAAL,IAAa,SAAb,GAAyBO,IAAI,CAACL,MAA9B,GAAuCK,IAAI,CAACE,OAAzD;ALYF,AGxBa,AEaX,KFfE,IEeKD,IAAI,CAACjC,MAAL,CAAY,UAACC,GAAD,EAAMmB,IAAN,EAAe;ALYpC,AGpBG,AESCnB,GF/BuB,CE+BvBA,CFTC,EAtBsB,AE+BpB,CF/BL,AE+BMmB,CFjCsD,CA0B5D,EEOU,CAACtC,KAAN,CAAH,GAAkB,CAAlB;ALYJ,AGlBE,AEOE,WAAOmB,GAAP;ALYJ,AKXG,GAHM,EAGJ,EAHI,CAAP;ALeF,AGlBE,AEOD,SFPQ,UAAUc,KAAV,EAAiB;AHmB1B,AGlBI;AHmBJ,AGlBI,AEOJ,SAASoB,EFPE9B,OAAO,CACXW,GADI,CACA,QEMX,CAAiCO,CFNtBN,CAAC,EAAI,IEMhB,EAA2C;ALY3C,AGjBQ,AEMN,MAAI/C,IFNQwC,EEMF,GAAG,KFNS,GAAGJ,gBAAgB,CAACW,CAA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","file":"testing_thread.45416cad.js","sourceRoot":"../public","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","'use strict';\nconst symbolObservable = require('symbol-observable').default;\n\nmodule.exports = value => Boolean(value && value[symbolObservable] && value === value[symbolObservable]());\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","module.exports = require(\"./dist/worker/index\")\n","export default function in_bound (range, value) {\n  // Lower bound\n  let lower_bound_ok = false;\n  let upper_bound_ok = false;\n\n  if (range.lower_bound !== undefined && range.min !== undefined) {\n    if (range.lower_bound == '<') {\n      if (range.min < value) {\n        lower_bound_ok = true;\n      }\n    } else {\n      if (range.min <= value) {\n        lower_bound_ok = true;\n      }\n    }\n  } else {\n    lower_bound_ok = true;\n  }\n\n  if (range.upper_bound !== undefined && range.max !== undefined) {\n    if (range.upper_bound == '<') {\n      if (value < range.max) {\n        upper_bound_ok = true;\n      }\n    } else {\n      if (value <= range.max) {\n        upper_bound_ok = true;\n      }\n    }\n  } else {\n    upper_bound_ok = true;\n  }\n\n  return lower_bound_ok && upper_bound_ok;\n}","import { maxBy } from 'lodash';\nimport in_bound from './in_bound';\n\nfunction transform_attr ({ attr, cls_count, total, smooth }) {\n  return Object.keys(attr).reduce((acc, k) => {\n    acc[k] = (attr[k] * 1.0 + 1) / (cls_count + (smooth * total));\n    return acc;\n  }, {})\n}\n\nexport function create_predictor ({ summary, total, smooth }) {\n  const classes = Object.keys(summary)\n  const modified_summary = classes.reduce((acc, cls) => {\n    let cls_summary = summary[cls]\n    let { count, attributes } = cls_summary;\n    let _attrs = {};\n    Object.keys(attributes).forEach(attr_key => {\n      const attr = attributes[attr_key];\n      _attrs[attr_key] = transform_attr({ \n        attr, \n        cls_count: count, \n        total, \n        smooth \n      });\n    });\n    // console.log(`total = ${total}`);\n    // console.log(`count = ${count}`);\n    return {\n      ...acc,\n      [cls]: { \n        prob: count * 1.0 / total,\n        attributes: _attrs \n      }\n    }\n  }, {});\n\n  // console.log('modified summary');\n  // console.log(modified_summary);\n\n  return function (input) {\n    // console.log(classes);\n    return classes\n      .map(c => {\n        const attributes = modified_summary[c].attributes;\n        const attr_keys = Object.keys(attributes);\n        \n        const attr_product = attr_keys\n          .map(attr_key => attributes[attr_key][input[attr_key]])\n          .reduce((acc, curr) => acc * curr, 1);\n\n        // console.log(modified_summary[c]);\n        const result = {\n          cls: parseInt(c),\n          prob: attr_product * modified_summary[c].prob\n        };\n\n        // console.log(result);\n\n        return result;\n      })\n      .reduce((acc, curr) => {\n        // console.log(curr);\n        if (curr.prob > acc.prob) return curr;\n        return acc;\n      }, { cls: -1, prob: -1 })\n  }\n}\n","import in_bound from './in_bound';\n\nexport default function create_row_converter (criteria) {\n  return function (row) {\n    let result = {};\n    criteria.forEach(c => {\n      if (c.kind == 'numeric') {\n        const r = c.ranges.find(r => in_bound(r, row[c.key]))\n        if (!r) {\n          throw new Error(`unknown range for value: [${c.key}:${row[c.key]}]`);\n        }\n        result[c.key] = r.value;\n      } else if (c.kind == 'categorial') {\n        result[c.key] = row[c.key]\n      } else {\n        throw new Error(`unknown criteria type: ${c.kind}`);\n      }\n    })\n    return result;\n  }\n}","import { shuffle, take, slice, range } from 'lodash';\nimport { create_predictor } from './predict.js';\nimport create_row_converter from 'dinastry/services/row_converter';\n\nexport function in_bound (range, value) {\n  // Lower bound\n  let lower_bound_ok = false;\n  let upper_bound_ok = false;\n\n  if (range.lower_bound !== undefined && range.min !== undefined) {\n    if (range.lower_bound == '<') {\n      if (range.min < value) {\n        lower_bound_ok = true;\n      }\n    } else {\n      if (range.min <= value) {\n        lower_bound_ok = true;\n      }\n    }\n  } else {\n    lower_bound_ok = true;\n  }\n\n  if (range.upper_bound !== undefined && range.max !== undefined) {\n    if (range.upper_bound == '<') {\n      if (value < range.max) {\n        upper_bound_ok = true;\n      }\n    } else {\n      if (value <= range.max) {\n        upper_bound_ok = true;\n      }\n    }\n  } else {\n    upper_bound_ok = true;\n  }\n\n  return lower_bound_ok && upper_bound_ok;\n}\n\nfunction build_sub_attribute (crit) {\n  const subs = crit.kind == 'numeric' ? crit.ranges : crit.options;\n  return subs.reduce((acc, curr) => {\n    acc[curr.value] = 0;\n    return acc;\n  }, {});\n}\n\nfunction build_result_structure (criteria) {\n  let result = {\n    1: { count: 0, attributes: {} },\n    0: { count: 0, attributes: {} }\n  };\n  criteria.forEach(c => {\n    result[1].attributes[c.key] = build_sub_attribute(c);\n    result[0].attributes[c.key] = build_sub_attribute(c);\n  })\n  return result;\n}\n\nfunction summary({ data, criterias }) {\n\tlet result = build_result_structure(criterias);\n\tconst keys = criterias.map(c => c.key);\n\tdata.forEach(d => {\n\t\tresult[d._class].count += 1\n\t\tcriterias.forEach(c => {\n\t\t\tconst x = d[c.key];\n\t\t\tif (c.kind == 'numeric') {\n        const range = c.ranges.find(range => in_bound(range, x));\n        try {\n          result[d._class].attributes[c.key][range.value] += 1;\n        } catch (err) {\n          console.log(c)\n          console.log(x)\n          throw err;\n        }\n      } else {\n        const o = c.options.find(o => o.value == x);\n        try {\n          result[d._class].attributes[c.key][o.value] += 1;\n        } catch (err) {\n          console.log(c)\n          console.log(x)\n          throw err;\n        }\n      }\n\t\t})\n\t})\n\treturn result;\n}\n\nexport default function testing ({ data, criterias }) {\n\tconst ratios = [0.1, 0.2, 0.3];\n\tconst n_run = 10;\n\tconst row_converter = create_row_converter(criterias);\n\treturn ratios.map(test_ratio => {\n\t\treturn range(n_run).map(irun => {\n\t\t\tlet all = shuffle(data);\n\t\t  const n_test = Math.floor(all.length * test_ratio);\n\t\t  const test_data = slice(all, 0, n_test);\n\t\t  const train_data = slice(all, n_test);\n\t\t\tconst summ = summary({ data: train_data, criterias });\n\t\t\tconst predictor = create_predictor({ summary: summ, smooth: 1, total: train_data.length });\n\n\t\t\tlet tp = 0;\n\t\t\tlet fp = 0;\n\t\t\tlet tn = 0;\n\t\t\tlet fn = 0;\n\n\t\t\ttest_data.forEach(d => {\n\t\t\t\tconst input = row_converter(d);\n\t      const r = predictor(input);\n\n\t      if (d._class == 1 && r.cls == 1) {\n\t        tp += 1;\n\t      } else if (d._class == 0 && r.cls == 1) {\n\t        fp += 1;\n\t      } else if (d._class == 0 && r.cls == 0) {\n\t        tn += 1;\n\t      } else if (d._class == 1 && r.cls == 0) {\n\t        fn += 1;\n\t      }\n\t\t\t})\n\n\t\t\tconst acc = ((tp + tn) / (test_data.length)) * 100;\n\t    const prec = (tp / (tp + fp)) * 100;\n\t    const recall = (tp / (tp + fn)) * 100;\n\t    const f1 = (2 * prec * recall) / (prec + recall);\n\n\t\t\treturn {\n\t\t\t\ttp, fp, tn, fn,\n\t\t\t\tacc, prec, recall, f1\n\t\t\t};\n\t\t})\n\t})\n\t// console.log(data.length);\n\t// console.log(acc);\n  // console.log(`length of test ${test_data.length}`);\n  // console.log(`length of train ${train_data.length}`);\n}","import { expose } from \"threads/worker\"\nimport testing from './testing.js';\n\nexpose({\n\trun: testing\n})"]}